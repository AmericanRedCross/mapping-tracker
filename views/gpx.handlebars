<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" />
<link rel="stylesheet" href="//cdn.datatables.net/1.10.10/css/jquery.dataTables.css" />
<style>
.btn-file {
    position: relative;
    overflow: hidden;
}
.btn-file input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 100%;
    min-height: 100%;
    font-size: 100px;
    text-align: right;
    filter: alpha(opacity=0);
    opacity: 0;
    outline: none;
    background: white;
    cursor: inherit;
    display: block;
}
#map{
  height: 450px;
}
.leaflet-control-attribution a {
  color: #6d6e70 !important;
  cursor: pointer;
}

.clickable-icon{
  cursor: pointer;
}
/*.leaflet-popup-content-wrapper, .leaflet-popup-tip {
  background: rgba(255,255,255,0.65);
}*/

.leaflet-control-zoom-extent:focus span {
  color: black;
}
.leaflet-control-attribution {
  font-size: x-small;
  color: #78787d;
}
.leaflet-control-attribution a {
  text-decoration: none;
  cursor: pointer;
  color: #6d6e70;
}
</style>



<div id="update-mapper-modal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Dale_2016-02-28_12-22_Sun.gpx</h4>
      </div>
      <form action="/query/update-mapper" method="POST" id="update-mapper">
        <div class="modal-body">
          <div class="form-group">
            <label for="mapper">Mapper ID</label>
            <input type="text" class="form-control" name="mapper" id="mapper" value="Dale" required>
            <input type="hidden" name="file" id="file" value="Dale_2016-02-28_12-22_Sun.gpx" required>
          </div>
        <!-- </div> -->
        <div style="text-align:right;">
          <div class="btn-group">
            <button class="btn btn-success sharp">Update</button>
            <button type="button" class="btn btn-dark sharp" data-dismiss="modal">Cancel</button>
          </div>
        </div>
        </div>
      </form>
    </div>
  </div>
</div>



<header class="row header">
	<div class="col-md-12">
		<h1>GPX track manager</h1>
	</div>
</header>

<form id="uploadForm" enctype="multipart/form-data" action="uploadgpx" method="post">
  <div class="input-group">
      <span class="input-group-btn">
          <span id="uploadBtn" class="btn btn-dark btn-file">
              Upload &nbsp;<i class="fa fa-plus"></i> <input type="file" name="gpxFiles" accept=".gpx" multiple />
					</span>
      </span>
  </div>
	<span class="help-block">
		Files must be .gpx files. Filename should begin with the mapper name/ID followed by an '_'.
	</span>
  <span id = "status"></span>
</form>


<hr>

<div class="row">
<div class="col-md-6">
<div id="mappedFile" style="text-align:right;"><i>Select a file to view.</i></div>
<div id="map"></div>
<hr>
</div>
<div class="col-md-6">
  <div id="files-table">

  </div>
</div>
</div>

<script src="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery.form/3.51/jquery.form.min.js"></script>
<script src="//cdn.datatables.net/1.10.10/js/jquery.dataTables.js"></script>

<script>
  $(document).ready(function() {

    $('#uploadForm').submit(function() {
      d3.select("#uploadBtn").classed("disabled", true);
      d3.select("#uploadBtn i").classed({'fa-plus':false, 'fa-spinner':true, 'fa-pulse':true});
      $(this).ajaxSubmit({
        error: function(xhr) {
          status('Error: ' + xhr.status);
        },
        success: function(response) {
          console.log(response)
          //$("#status").empty().text(response);
          d3.select("#uploadBtn").classed("disabled", false);
          d3.select("#uploadBtn i").classed({'fa-plus':true, 'fa-spinner':false, 'fa-pulse':false});
          getDbFiles();
        }
      });
      return false;
    });

    $('#update-mapper').submit(function() {
      $(this).ajaxSubmit({
        error: function(xhr) {
          status('Error: ' + xhr.status);
        },
        success: function(response) {
          console.log(response)
          //$("#status").empty().text(response);
          $('#update-mapper-modal').modal('hide');
          getDbFiles();
        }
      });
      return false;
    });

});

$(document).on('change', '.btn-file :file', function() {
    $('#uploadForm').submit();
});

function updateMapper(currentMapper, fileName){
  $('#update-mapper-modal').find('.modal-title').text(fileName);
  $('#mapper').val(currentMapper);
  $('#file').val(fileName);
  $('#update-mapper-modal').modal();
}


var map = L.map('map').setView([0, 0], 2);
var mapFeatures = L.layerGroup().addTo(map);
var lineLayer = L.geoJson();
var mapBounds;


L.tileLayer('http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png', {
  attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map);


function getDbFiles(){

  $.ajax({
    type: 'GET',
    url: '/query/distinct-file',
    dataType: 'JSON'
  }).done(function(response){
    populateTable(response);
  });

  // url = window.location.origin + "/query/distinct-file";
  // $.get(url, function(response){
  //   populateTable(response);
  // });
}

function populateTable(rows){

  $("#files-table").empty();
  $("#files-table").html('<table id="dataTable"><thead><tr><th>mapper</th><th>file name</th><th>view</th></tr></thead><tbody></tbody></table>');
  $.each(rows, function(i,d){
    var rowHtml = "<tr>"+ "<td>" + d.mapper + ' &nbsp;<i class="fa fa-pencil-square-o clickable-icon" onclick="updateMapper(' + "'" + d.mapper + "','" + d.file + "'" + ')"></i></td>' +
    "<td>" + d.file + ' &nbsp;<i class="fa fa-trash remove-icon" onclick="removeFromDb(' + "'" + d.file + "'" + ')"></i></td>' +
    '<td style="text-align:center;"><i class="fa fa-globe" onclick="getGpxGeoJson(' + "'" + d.file + "'" + ')"></i></td>' +
    '</tr>';
    $('#dataTable tbody').append(rowHtml);
  })
  $('#dataTable').DataTable();

}

function clearMap(){
  $("#mappedFile").html('<i>Select a file to view.</i>')
  mapFeatures.clearLayers();
}

function removeFromDb(filename){

  var confirmation = confirm('Are you sure you want to delete this file and all associated track segmenets?');
  if (confirmation === true) {
    $.ajax({
      type: 'POST',
      data: {'file': filename},
      url: '/query/remove-file'
    }).done(function(){
      clearMap();
      getDbFiles();
    });
  } else {
    return false;
  }

}


function getGpxGeoJson(filename){
  $.ajax({
    type: 'POST',
    data: {'file': filename},
    url: '/query/gpx-single',
    dataType: 'JSON'
  }).done(function(response){
    mapData(filename, response);
  });
}

function highlightFeature(e) {
    var layer = e.target;
    layer.setStyle({
        weight: 5,
        color: '#ECB731',
        dashArray: '',
        fillOpacity: 0.7
    });
    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
    }
    //info.update(layer.feature.properties);
}

function resetHighlight(e) {
    lineLayer.resetStyle(e.target);
    //info.update();
}

function onEachFeature(feature, layer){
  var popupContent = 'speed: ' + (feature.properties.km / feature.properties.hours) + '<br>';
  $.each(feature.properties, function(i,d){
    if(i === 'hours'){
      popupContent += '<b>minutes: </b>' + (d * 60).toFixed(1) + '<br>';
    } else if(i === 'km'){
      popupContent += '<b>' + i + ':</b> ' + d.toFixed(2) + '<br>';
    }
    else if(i !== 'file'){
      popupContent += '<b>' + i + ':</b> ' + d + '<br>';
    }
  })
  layer.bindPopup(popupContent);
  layer.on({
    mouseover: highlightFeature,
    mouseout: resetHighlight
  })
}

function mapData(filename, data){
  clearMap();
  $("#mappedFile").html('<b>' + filename + '</b>');
  lineLayer = L.geoJson(data, {
    style: function(feature){
			return {
	        "weight": 6,
					"color": (feature.properties.speed === 'walk') ? "#0047d3" : "#ed1b2e",
					"stroke": (feature.properties.speed === 'walk') ? "#0047d3" : "#ed1b2e",
	        "opacity": 0.65
	    }
		},
    onEachFeature: onEachFeature
  }).addTo(mapFeatures)
  mapBounds = lineLayer.getBounds()
  map.fitBounds(mapBounds);
}

// ADD CONTROL FOR ZOOM TO EXTENT
var extentControl = L.Control.extend({
  options: {
    position: 'topleft',
		title: 'Full extent',
    content: '<i class="fa fa-expand"></i>'
  },
  onAdd: function (map) {
    var className = 'leaflet-control-zoom-extent', content, container;
    container = map.zoomControl._container;
    content = this.options.content;
    this._createButton(this.options.title, className, content, container, this);
    return container;
  },
  _createButton: function (title, className, content, container, context) {
    this.link = L.DomUtil.create('a', className, container);
    this.link.href = '#';
    this.link.title = title;
    this.link.innerHTML = content;
    return this.link;
  }
});
map.addControl(new extentControl());

function zoomOut() {
    map.fitBounds(mapBounds);
}

$('.leaflet-control-zoom-extent').click(function(){
  if(mapBounds){
    zoomOut();
  }
})



getDbFiles();

</script>
